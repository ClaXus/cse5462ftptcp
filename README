CSE 5462 Project
Dan Ziemba

Simple file transfer client and server using fake tcp sockets that actually
connect to tcpd, a program which wraps udp packet with a tcp header then sends
packets through the troll program to simulate poor quality networks. Currently
no checking is done for lost or corrupted packets and none of the tcp emulation
is actually done.  Speed is limited to 20 KB/s to prevent dropped packets by
troll.

Build:
Run make

Run:
In order to start troll on the server, it is necessary to know the host of the
client that will be connecting.  Note the listen-port+1.  If server will listen
on port 10000 for example, client will listen on port 10001 so that is what 
should be given to server side troll.
	Server:
	./troll -S localhost -b 6661 -C <client-host> -a <listen-port+1> 6662 [more]
	./tcpd <listen-port>
	./ftps <listen-port>

	Client:
	./troll -S localhost -b 6664 -C <server-host> -a <server-port> 6665 [more]
	./tcpd <server-port> <server-host>
	./ftpc <server-host> <server-port> <file-name>


Implementation Details:
ftps will listen on port 6660 for messages from tcpd
ftps will send messages to tcpd on port 6661
tcpd in server mode will send messages to troll on port 6662
tcpd in server mode will listen on port 6661 for messages from troll
ftpc will listen on port 6663 for messages from tcpd
ftpc will send messages to tcpd on port 6664
tcpd in client mode will send messages to troll on port 6665
tcpd in client mode will listen on port 6664 for messages from troll
